#!/bin/sh

## Copyright (c) 2012 Frank Terbeck <ft@bewatermyfriend.org>, All rights
## reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##
##   1. Redistributions of source code must retain the above
##      copyright notice, this list of conditions and the following
##      disclaimer.
##   2. Redistributions in binary form must reproduce the above
##      copyright notice, this list of conditions and the following
##      disclaimer in the documentation and/or other materials
##      provided with the distribution.
##
##  THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
##  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
##  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
##  DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS OF THE
##  PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
##  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
##  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
##  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
##  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
##  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
##  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This script finds all *.t files in the source and binary directories of a
# project build tree and feeds those into Perl's TAP harness `prove'; which
# will use the `dispatch' script, to flexibly and transparently run test
# programs written in arbitrary languages.

is_option () {
    case "$1" in
        -*) return 0 ;;
    esac
    return 1
}

need_num_args () {
    if test "$3" -lt "$2"; then
        printf '`%s'\'': missing argument(s).\n' "$1"
        return 1
    fi
    return 0
}

stripper=cat
strip_roots () {
    if [ "$DISPATCH_ROOT" = "$DISPATCH_BIN_ROOT" ]; then
        sed -e "s:^$DISPATCH_ROOT/::"
    else
        sed -e "s:^$DISPATCH_ROOT/::" | \
        sed -e "s:^$DISPATCH_BIN_ROOT/::"
    fi
}

while is_option "$1"; do
    case "$1" in
        -binary-dir)
            need_num_args "$1" 2 "$#" || exit 1
            BINARY_DIR="$2"
            shift 2
            ;;
        -source-dir)
            need_num_args "$1" 2 "$#" || exit 1
            SOURCE_DIR="$2"
            shift 2
            ;;
        -dispatch)
            need_num_args "$1" 2 "$#" || exit 1
            DISPATCH_SCRIPT="$2"
            shift 2
            ;;
        -dispatch-root)
            need_num_args "$1" 2 "$#" || exit 1
            DISPATCH_ROOT="$2"
            shift 2
            ;;
        -dispatch-bin-root)
            need_num_args "$1" 2 "$#" || exit 1
            DISPATCH_BIN_ROOT="$2"
            shift 2
            ;;
        -export)
            need_num_args "$1" 3 "$#" || exit 1
            eval "$2=$3"
            export "$2"
            shift 3
            ;;
        -strip-roots)
            stripper="strip_roots"
            shift
            ;;
        -dispatch-verbose)
            DISPATCH_VERBOSE="1"
            shift
            ;;
        -verbose)
            RUNTESTS_VERBOSE="1"
            shift
            ;;
        -debug)
            RUNTESTS_DEBUG="1"
            shift
            ;;
        *)
            printf 'Unknown option `%s'\''\n' "$1"
            exit 2;;
    esac
done

SOURCE_DIR=${SOURCE_DIR:-$PWD}
BINARY_DIR=${BINARY_DIR:-$PWD}
DISPATCH_ROOT="${DISPATCH_ROOT:-${SOURCE_DIR}/test}"
DISPATCH_BIN_ROOT="${DISPATCH_BIN_ROOT:-${BINARY_DIR}/test}"
DISPATCH_SCRIPT="${DISPATCH_SCRIPT:-${SOURCE_DIR}/test-dispatch/dispatch}"

export SOURCE_DIR
export BINARY_DIR
export DISPATCH_ROOT
export DISPATCH_BIN_ROOT

if [ "$SOURCE_DIR" = "$BINARY_DIR" ]; then
    set -- "$DISPATCH_ROOT"
    unset DISPATCH_BIN_ROOT
else
    set -- "$DISPATCH_ROOT" "$DISPATCH_BIN_ROOT"
fi

DISPATCH_VERBOSE=${DISPATCH_VERBOSE:-0}
export DISPATCH_VERBOSE

RUNTESTS_VERBOSE=${RUNTESTS_VERBOSE:-0}
if [ "$RUNTESTS_VERBOSE" = 1 ]; then
    _prove_verbose="--verbose"
else
    _prove_verbose=""
fi

if [ "$RUNTESTS_DEBUG" = 1 ]; then
    printf '\n runtests environment:\n'
    printf ' ---------------------\n\n'
    printf '  SOURCE_DIR:        "%s"\n' "$SOURCE_DIR"
    printf '  BINARY_DIR:        "%s"\n' "$BINARY_DIR"
    printf '  DISPATCH_SCRIPT:   "%s"\n' "$DISPATCH_SCRIPT"
    printf '  DISPATCH_ROOT:     "%s"\n' "$DISPATCH_ROOT"
    printf '  DISPATCH_BIN_ROOT: "%s"\n' "$DISPATCH_BIN_ROOT"
    printf '  RUNTESTS_VERBOSE:  "%s"\n' "$RUNTESTS_VERBOSE"
    printf '  RUNTESTS_DEBUG:    "%s"\n' "$RUNTESTS_DEBUG"
    printf '  _prove_verbose:    "%s"\n' "$_prove_verbose"
    printf '\n ---------------------\n\n'
fi

find "$@" -name "*.t" -print \
    | sed -e 's,^\./,,' \
    | "$stripper" \
    | sort \
    | prove $_prove_verbose \
            --color \
            --normalize \
            --merge \
            --exec "sh ${DISPATCH_SCRIPT}" -
